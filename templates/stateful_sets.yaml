{{- $shortname := include "ravendb.name" . -}}

{{- range .Values.nodes }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{$shortname}}-{{.nodeTag | lower }}"
  annotations: 
    ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    heritage: {{$.Release.Service | quote }}
    release: {{$.Release.Name | quote }}
    chart: "{{$.Chart.Name}}-{{$.Chart.Version}}"
    app: ravendb
    nodeTag: "{{.nodeTag}}"
spec:
  selector:
    matchLabels:
      nodeTag: "{{.nodeTag}}"
  serviceName: "{{$shortname}}-{{.nodeTag | lower }}"
  replicas: 1
  template:
    metadata:
      labels:
        nodeTag: "{{.nodeTag}}"
    spec:
      dnsPolicy: Default
      serviceAccountName: modify-secrets
      initContainers:
      - name: "{{$.Chart.Name}}-init"
        image: "ubuntu:latest" # todo: use more lightweight distro like alpine with bash
        command: ["/bin/bash"]
        args: ["/ravendb/scripts/set-cert.sh"]
        volumeMounts:
          - name: {{$shortname}}-scripts
            mountPath: /ravendb/scripts
          - name: {{$shortname}}-pack
            mountPath: /usr/ravendb
          - name: {{$shortname}}-certs
            mountPath: /ravendb/certs
            readOnly: false
      containers:
      - name: {{ $.Chart.Name }}
        image: "ravendb/ravendb:{{$.Values.ravenImageTag}}"
        ports:
        - containerPort: 443
          name: https
        - containerPort: 38888
          name: tcp
          protocol: TCP
        env:
        - name: RAVEN_License_Eula_Accepted
          value: 'true'
        - name: RAVEN_License
          value: {{ $.Files.Get $.Values.licenseFilePath | toPrettyJson }}
        - name: RAVEN_Security_Certificate_LetsEncrypt_Email
          value: {{$.Values.letsEncryptEmail}}
        - name: RAVEN_Setup_Mode
          value: "LetsEncrypt"
        # - name: RAVEN_AcmeUrl
        #   value: "https://acme-staging-v02.api.letsencrypt.org/directory"
        - name: RAVEN_ARGS
          value: --Security.UnsecuredAccessAllowed=PublicNetwork --Security.Certificate.Load.Exec=/ravendb/scripts/get-server-cert.sh --Security.Certificate.Exec.TimeoutInSec=60 --Security.Certificate.Change.Exec=/ravendb/scripts/update-cert.sh --Security.Certificate.Renew.Exec=/ravendb/scripts/renew-cert.sh
        - name: RAVEN_ServerUrl
          value: "https://0.0.0.0:443"
        - name: RAVEN_ServerUrl_Tcp
          value: "tcp://0.0.0.0:38888"
        - name: RAVEN_PublicServerUrl
          value: "https://{{ .nodeTag | lower }}.{{$.Values.domain}}:443"
        - name: RAVEN_PublicServerUrl_Tcp
          value: "tcp://{{ .nodeTag | lower }}-tcp.{{$.Values.domain}}:{{.publicTcpPort}}"
        volumeMounts:
          - name: {{$shortname}}-scripts
            mountPath: /ravendb/scripts
          - name: {{$shortname}}-pack
            mountPath: /usr/ravendb
          - name: {{$shortname}}-certs
            mountPath: /ravendb/certs
          - name: "{{$shortname}}"
            mountPath: /opt/RavenDB/Server/RavenData
      volumes:
        - name: {{$shortname}}-scripts
          configMap:
            name: {{$shortname}}-scripts
            defaultMode: 0700
        - name: {{$shortname}}-pack
          secret:
            secretName: {{$shortname}}-pack
        - name: {{$shortname}}-certs
          secret:
            secretName: {{$shortname}}-certs
  volumeClaimTemplates:
    - metadata:
        name: {{$shortname}}
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ $.Values.storageSize }}
---
{{- end }}
